{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "calculateReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/OriginStaking.sol",
    "1": "contracts/openzeppelin/access/Ownable.sol",
    "2": "contracts/openzeppelin/token/ERC20/IERC20.sol",
    "3": "contracts/openzeppelin/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/OriginStaking.sol",
    "exportedSymbols": {
      "Context": [
        520
      ],
      "IERC20": [
        490
      ],
      "OriginStaking": [
        264
      ],
      "Ownable": [
        412
      ]
    },
    "id": 265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".28"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "absolutePath": "contracts/openzeppelin/token/ERC20/IERC20.sol",
        "file": "./openzeppelin/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 265,
        "sourceUnit": 491,
        "src": "58:47:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/access/Ownable.sol",
        "file": "./openzeppelin/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 265,
        "sourceUnit": 413,
        "src": "106:43:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nameLocations": [
                "177:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 412,
              "src": "177:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "177:7:0"
          }
        ],
        "canonicalName": "OriginStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 264,
        "linearizedBaseContracts": [
          264,
          412,
          520
        ],
        "name": "OriginStaking",
        "nameLocation": "160:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 8,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "205:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 264,
            "src": "191:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$490",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "IERC20",
                "nameLocations": [
                  "191:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 490,
                "src": "191:6:0"
              },
              "referencedDeclaration": 490,
              "src": "191:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$490",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "OriginStaking.Stake",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "248:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "240:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "240:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "272:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "264:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "264:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "224:5:0",
            "nodeType": "StructDefinition",
            "scope": 264,
            "src": "217:71:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "328:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 264,
            "src": "294:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
              "typeString": "mapping(address => struct OriginStaking.Stake)"
            },
            "typeName": {
              "id": 17,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "294:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                "typeString": "mapping(address => struct OriginStaking.Stake)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 16,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15,
                  "name": "Stake",
                  "nameLocations": [
                    "313:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "313:5:0"
                },
                "referencedDeclaration": 13,
                "src": "313:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$13_storage_ptr",
                  "typeString": "struct OriginStaking.Stake"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7b0a47ee",
            "id": 21,
            "mutability": "mutable",
            "name": "rewardRate",
            "nameLocation": "356:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 264,
            "src": "341:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "341:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "369:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
            "id": 27,
            "name": "Staked",
            "nameLocation": "405:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "428:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "412:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "442:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "434:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:38:0"
            },
            "src": "399:51:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
            "id": 33,
            "name": "Unstaked",
            "nameLocation": "461:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "486:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "470:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "500:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "492:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:38:0"
            },
            "src": "455:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
            "id": 39,
            "name": "RewardClaimed",
            "nameLocation": "519:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "549:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "533:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "563:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "555:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "532:38:0"
            },
            "src": "513:58:0"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "691:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "701:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$490",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "716:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "709:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$490_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "709:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$490",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "701:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$490",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "701:22:0"
                }
              ]
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 44,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "679:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "683:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "679:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 46,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 43,
                  "name": "Ownable",
                  "nameLocations": [
                    "671:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 412,
                  "src": "671:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "671:19:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "663:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "655:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:16:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:0"
            },
            "scope": 264,
            "src": "643:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "776:510:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "794:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "803:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "794:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "806:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
                          "typeString": "literal_string \"Cannot stake 0 tokens\""
                        },
                        "value": "Cannot stake 0 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
                          "typeString": "literal_string \"Cannot stake 0 tokens\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "786:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "786:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 70,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "867:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "871:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "867:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 74,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "887:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OriginStaking_$264",
                                  "typeString": "contract OriginStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OriginStaking_$264",
                                  "typeString": "contract OriginStaking"
                                }
                              ],
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "879:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 72,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "879:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "879:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 76,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "894:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 68,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "848:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$490",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "854:12:0",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 489,
                          "src": "848:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "848:53:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "903:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "840:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "840:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "840:81:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 81,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "936:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                            "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                          }
                        },
                        "id": 84,
                        "indexExpression": {
                          "expression": {
                            "id": 82,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "943:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "947:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "943:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "936:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_storage",
                          "typeString": "struct OriginStaking.Stake storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "955:6:0",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "936:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "964:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "936:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "nodeType": "IfStatement",
                  "src": "932:204:0",
                  "trueBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "967:169:0",
                    "statements": [
                      {
                        "assignments": [
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "989:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 109,
                            "src": "981:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "981:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 94,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 91,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1014:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1018:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1014:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "calculateReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "998:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "981:44:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 98,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1054:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1058:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1054:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1066:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 95,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1039:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$490",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1045:8:0",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 457,
                            "src": "1039:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1039:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1039:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 104,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1106:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1110:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1106:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 106,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1118:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 103,
                            "name": "RewardClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "1092:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1092:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 108,
                        "nodeType": "EmitStatement",
                        "src": "1087:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 111,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1146:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                            "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1157:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1153:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1146:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_storage",
                          "typeString": "struct OriginStaking.Stake storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1165:6:0",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1146:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1175:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1146:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:35:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 119,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1191:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                            "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1198:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1202:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1198:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1191:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_storage",
                          "typeString": "struct OriginStaking.Stake storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1210:9:0",
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "1191:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 124,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1222:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1228:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1222:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1191:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:46:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1260:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1264:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1260:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1272:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1253:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "EmitStatement",
                  "src": "1248:31:0"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "745:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "759:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "751:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:16:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:0"
            },
            "scope": 264,
            "src": "736:550:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1320:364:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "1338:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                                "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                              }
                            },
                            "id": 142,
                            "indexExpression": {
                              "expression": {
                                "id": 140,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1345:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1349:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1345:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1338:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$13_storage",
                              "typeString": "struct OriginStaking.Stake storage ref"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1357:6:0",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1338:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1366:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1338:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e73207374616b6564",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
                          "typeString": "literal_string \"No tokens staked\""
                        },
                        "value": "No tokens staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
                          "typeString": "literal_string \"No tokens staked\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1330:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:58:0"
                },
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1407:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "1399:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1399:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 151,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1416:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                          "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "expression": {
                          "id": 152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1423:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1427:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1423:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1416:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$13_storage",
                        "typeString": "struct OriginStaking.Stake storage ref"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1435:6:0",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "1416:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1399:42:0"
                },
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "1459:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "1451:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1451:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1484:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1488:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1484:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 159,
                      "name": "calculateReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "1468:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1451:44:0"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1506:25:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 164,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1513:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                          "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1520:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1524:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1520:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1513:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$13_storage",
                        "typeString": "struct OriginStaking.Stake storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1557:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1561:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1557:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 175,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1569:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 176,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "1578:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1569:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 170,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1542:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$490",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1548:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 457,
                      "src": "1542:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1610:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1614:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1610:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1622:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 180,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1601:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1601:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "EmitStatement",
                  "src": "1596:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1658:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1662:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1658:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 189,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "1670:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 186,
                      "name": "RewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1644:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "1639:38:0"
                }
              ]
            },
            "functionSelector": "2def6620",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "1301:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1320:0:0"
            },
            "scope": 264,
            "src": "1292:392:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1761:294:0",
              "statements": [
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "userStake",
                      "nameLocation": "1784:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1771:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                        "typeString": "struct OriginStaking.Stake"
                      },
                      "typeName": {
                        "id": 201,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 200,
                          "name": "Stake",
                          "nameLocations": [
                            "1771:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13,
                          "src": "1771:5:0"
                        },
                        "referencedDeclaration": 13,
                        "src": "1771:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_storage_ptr",
                          "typeString": "struct OriginStaking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "baseExpression": {
                      "id": 203,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1796:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                        "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                      }
                    },
                    "id": 205,
                    "indexExpression": {
                      "id": 204,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "1803:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1796:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$13_storage",
                      "typeString": "struct OriginStaking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1771:39:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 207,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "1824:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                          "typeString": "struct OriginStaking.Stake memory"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1834:6:0",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1824:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1844:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1824:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 213,
                  "nodeType": "IfStatement",
                  "src": "1820:35:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1854:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 199,
                    "id": 212,
                    "nodeType": "Return",
                    "src": "1847:8:0"
                  }
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "stakingDuration",
                      "nameLocation": "1874:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1866:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 221,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 216,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1892:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1898:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1892:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 218,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "1910:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                          "typeString": "struct OriginStaking.Stake memory"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1920:9:0",
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "1910:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1892:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1866:63:0"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "1947:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "1939:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1939:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 224,
                                "name": "userStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1957:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                                  "typeString": "struct OriginStaking.Stake memory"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1967:6:0",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10,
                              "src": "1957:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 226,
                              "name": "rewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1976:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1957:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 228,
                            "name": "stakingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "1989:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1957:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 230,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1956:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_3153600000_by_1",
                            "typeString": "int_const 3153600000"
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "333635",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2009:8:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            },
                            "value": "365"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2020:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "2009:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3153600000_by_1",
                            "typeString": "int_const 3153600000"
                          }
                        }
                      ],
                      "id": 234,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2008:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3153600000_by_1",
                        "typeString": "int_const 3153600000"
                      }
                    },
                    "src": "1956:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1939:85:0"
                },
                {
                  "expression": {
                    "id": 237,
                    "name": "reward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 223,
                    "src": "2042:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "2035:13:0"
                }
              ]
            },
            "functionSelector": "d82e3962",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReward",
            "nameLocation": "1699:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1723:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1715:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1714:16:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "1752:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1751:9:0"
            },
            "scope": 264,
            "src": "1690:365:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2206:100:0",
              "statements": [
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "2229:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2216:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                        "typeString": "struct OriginStaking.Stake"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "Stake",
                          "nameLocations": [
                            "2216:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13,
                          "src": "2216:5:0"
                        },
                        "referencedDeclaration": 13,
                        "src": "2216:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$13_storage_ptr",
                          "typeString": "struct OriginStaking.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 252,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2237:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$13_storage_$",
                        "typeString": "mapping(address => struct OriginStaking.Stake storage ref)"
                      }
                    },
                    "id": 254,
                    "indexExpression": {
                      "id": 253,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "2244:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2237:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$13_storage",
                      "typeString": "struct OriginStaking.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2216:35:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 256,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "2269:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                            "typeString": "struct OriginStaking.Stake memory"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2275:6:0",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2269:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 258,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "2283:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$13_memory_ptr",
                            "typeString": "struct OriginStaking.Stake memory"
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2289:9:0",
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2283:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 260,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2268:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 248,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "2261:38:0"
                }
              ]
            },
            "functionSelector": "7a766460",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "2123:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2140:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2132:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:16:0"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2179:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2171:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "2195:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2187:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:35:0"
            },
            "scope": 264,
            "src": "2114:192:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 265,
        "src": "151:2157:0",
        "usedErrors": [
          278,
          283
        ],
        "usedEvents": [
          27,
          33,
          39,
          289
        ]
      }
    ],
    "src": "32:2278:0"
  },
  "bytecode": "6080604052600a60035534801561001557600080fd5b506040516108f23803806108f2833981016040819052610034916100d9565b338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610089565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610109565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100eb57600080fd5b81516001600160a01b038116811461010257600080fd5b9392505050565b6107da806101186000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610121578063a694fc3a14610146578063d82e396214610159578063f2fde38b1461016c578063fc0c546a1461017f57600080fd5b80632def662014610098578063715018a6146100a25780637a766460146100aa5780637b0a47ee1461010a575b600080fd5b6100a0610192565b005b6100a0610319565b6100f06100b83660046106be565b6001600160a01b0316600090815260026020908152604091829020825180840190935280548084526001909101549290910182905291565b604080519283526020830191909152015b60405180910390f35b61011360035481565b604051908152602001610101565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610101565b6100a06101543660046106ee565b61032d565b6101136101673660046106be565b610573565b6100a061017a3660046106be565b610603565b60015461012e906001600160a01b031681565b336000908152600260205260409020546101e65760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064015b60405180910390fd5b336000818152600260205260408120549161020090610573565b336000818152600260205260408120818155600190810191909155549192506001600160a01b039091169063a9059cbb9061023b848661071d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610736565b5060405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a260405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a25050565b610321610641565b61032b600061066e565b565b600081116103755760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74207374616b65203020746f6b656e7360581b60448201526064016101dd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f09190610736565b61042e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101dd565b33600090815260026020526040902054156104fc57600061044e33610573565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610736565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a2505b336000908152600260205260408120805483929061051b90849061071d565b9091555050336000818152600260205260409081902042600190910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906105689084815260200190565b60405180910390a250565b6001600160a01b038116600090815260026020908152604080832081518083019092528054808352600190910154928201929092529082036105b85750600092915050565b60008160200151426105ca9190610758565b9050600063bbf81e008260035485600001516105e6919061076b565b6105f0919061076b565b6105fa9190610782565b95945050505050565b61060b610641565b6001600160a01b03811661063557604051631e4fbdf760e01b8152600060048201526024016101dd565b61063e8161066e565b50565b6000546001600160a01b0316331461032b5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106d057600080fd5b81356001600160a01b03811681146106e757600080fd5b9392505050565b60006020828403121561070057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561073057610730610707565b92915050565b60006020828403121561074857600080fd5b815180151581146106e757600080fd5b8181038181111561073057610730610707565b808202811582820484141761073057610730610707565b60008261079f57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122056feb8688df78b869381a0188275d7be864858efec1ef3964477555570f2bf1364736f6c634300081c0033",
  "bytecodeSha1": "6f7ea25276021f1d1c10e91a8a9141ac4f0c0c0d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.28+commit.7893614a"
  },
  "contractName": "OriginStaking",
  "coverageMap": {
    "branches": {
      "0": {
        "OriginStaking.calculateReward": {
          "24": [
            1824,
            1845,
            false
          ]
        },
        "OriginStaking.stake": {
          "21": [
            794,
            804,
            true
          ],
          "22": [
            848,
            901,
            true
          ],
          "23": [
            936,
            965,
            false
          ]
        }
      },
      "1": {
        "Ownable._checkOwner": {
          "26": [
            1855,
            1878,
            false
          ]
        },
        "Ownable.transferOwnership": {
          "25": [
            2627,
            2649,
            false
          ]
        }
      },
      "2": {},
      "3": {}
    },
    "statements": {
      "0": {
        "OriginStaking.calculateReward": {
          "14": [
            1847,
            1855
          ]
        },
        "OriginStaking.stake": {
          "7": [
            786,
            830
          ],
          "8": [
            840,
            921
          ],
          "9": [
            1039,
            1073
          ],
          "10": [
            1087,
            1125
          ],
          "11": [
            1146,
            1181
          ],
          "12": [
            1191,
            1237
          ],
          "13": [
            1248,
            1279
          ]
        },
        "OriginStaking.unstake": {
          "1": [
            1330,
            1388
          ],
          "2": [
            1506,
            1531
          ],
          "3": [
            1542,
            1585
          ],
          "4": [
            1596,
            1629
          ],
          "5": [
            1639,
            1677
          ]
        }
      },
      "1": {
        "Ownable._checkOwner": {
          "18": [
            1851,
            1952
          ]
        },
        "Ownable._transferOwnership": {
          "19": [
            3020,
            3037
          ],
          "20": [
            3047,
            3092
          ]
        },
        "Ownable.owner": {
          "0": [
            1703,
            1716
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            2357,
            2387
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            2623,
            2714
          ],
          "16": [
            2723,
            2751
          ]
        }
      },
      "2": {},
      "3": {
        "Context._msgSender": {
          "17": [
            728,
            745
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610121578063a694fc3a14610146578063d82e396214610159578063f2fde38b1461016c578063fc0c546a1461017f57600080fd5b80632def662014610098578063715018a6146100a25780637a766460146100aa5780637b0a47ee1461010a575b600080fd5b6100a0610192565b005b6100a0610319565b6100f06100b83660046106be565b6001600160a01b0316600090815260026020908152604091829020825180840190935280548084526001909101549290910182905291565b604080519283526020830191909152015b60405180910390f35b61011360035481565b604051908152602001610101565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610101565b6100a06101543660046106ee565b61032d565b6101136101673660046106be565b610573565b6100a061017a3660046106be565b610603565b60015461012e906001600160a01b031681565b336000908152600260205260409020546101e65760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064015b60405180910390fd5b336000818152600260205260408120549161020090610573565b336000818152600260205260408120818155600190810191909155549192506001600160a01b039091169063a9059cbb9061023b848661071d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610736565b5060405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a260405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a25050565b610321610641565b61032b600061066e565b565b600081116103755760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74207374616b65203020746f6b656e7360581b60448201526064016101dd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f09190610736565b61042e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101dd565b33600090815260026020526040902054156104fc57600061044e33610573565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610736565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a2505b336000908152600260205260408120805483929061051b90849061071d565b9091555050336000818152600260205260409081902042600190910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906105689084815260200190565b60405180910390a250565b6001600160a01b038116600090815260026020908152604080832081518083019092528054808352600190910154928201929092529082036105b85750600092915050565b60008160200151426105ca9190610758565b9050600063bbf81e008260035485600001516105e6919061076b565b6105f0919061076b565b6105fa9190610782565b95945050505050565b61060b610641565b6001600160a01b03811661063557604051631e4fbdf760e01b8152600060048201526024016101dd565b61063e8161066e565b50565b6000546001600160a01b0316331461032b5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106d057600080fd5b81356001600160a01b03811681146106e757600080fd5b9392505050565b60006020828403121561070057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561073057610730610707565b92915050565b60006020828403121561074857600080fd5b815180151581146106e757600080fd5b8181038181111561073057610730610707565b808202811582820484141761073057610730610707565b60008261079f57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122056feb8688df78b869381a0188275d7be864858efec1ef3964477555570f2bf1364736f6c634300081c0033",
  "deployedSourceMap": "151:2157:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:392;;;:::i;:::-;;2293:101:1;;;:::i;2114:192:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2237:14:0;2171;2237;;;:6;:14;;;;;;;;;2216:35;;;;;;;;;;;;;;;;;;;;;;;;;;2114:192;;;;;479:25:4;;;535:2;520:18;;513:34;;;;452:18;2114:192:0;;;;;;;;341:30;;;;;;;;;704:25:4;;;692:2;677:18;341:30:0;558:177:4;1638:85:1;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;1638:85;;;-1:-1:-1;;;;;904:32:4;;;886:51;;874:2;859:18;1638:85:1;740:203:4;736:550:0;;;;;;:::i;:::-;;:::i;1690:365::-;;;;;;:::i;:::-;;:::i;2543:215:1:-;;;;;;:::i;:::-;;:::i;191:19:0:-;;;;;-1:-1:-1;;;;;191:19:0;;;1292:392;1345:10;1366:1;1338:18;;;:6;:18;;;;;:25;1330:58;;;;-1:-1:-1;;;1330:58:0;;1557:2:4;1330:58:0;;;1539:21:4;1596:2;1576:18;;;1569:30;-1:-1:-1;;;1615:18:4;;;1608:46;1671:18;;1330:58:0;;;;;;;;;1423:10;1399:14;1416:18;;;:6;:18;;;;;:25;;1468:27;;:15;:27::i;:::-;1520:10;1513:18;;;;:6;:18;;;;;1506:25;;;;;;;;;;;1542:5;1451:44;;-1:-1:-1;;;;;;1542:5:0;;;;:14;;1569:15;1451:44;1569:6;:15;:::i;:::-;1542:43;;-1:-1:-1;;;;;;1542:43:0;;;;;;;-1:-1:-1;;;;;2154:32:4;;;1542:43:0;;;2136:51:4;2203:18;;;2196:34;2109:18;;1542:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1601:28:0;;704:25:4;;;1610:10:0;;1601:28;;692:2:4;677:18;1601:28:0;;;;;;;1644:33;;704:25:4;;;1658:10:0;;1644:33;;692:2:4;677:18;1644:33:0;;;;;;;1320:364;;1292:392::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;736:550:0:-;803:1;794:6;:10;786:44;;;;-1:-1:-1;;;786:44:0;;2725:2:4;786:44:0;;;2707:21:4;2764:2;2744:18;;;2737:30;-1:-1:-1;;;2783:18:4;;;2776:51;2844:18;;786:44:0;2523:345:4;786:44:0;848:5;;:53;;-1:-1:-1;;;848:53:0;;867:10;848:53;;;3075:51:4;887:4:0;3142:18:4;;;3135:60;3211:18;;;3204:34;;;-1:-1:-1;;;;;848:5:0;;;;:18;;3048::4;;848:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;840:81;;;;-1:-1:-1;;;840:81:0;;3451:2:4;840:81:0;;;3433:21:4;3490:2;3470:18;;;3463:30;-1:-1:-1;;;3509:18:4;;;3502:45;3564:18;;840:81:0;3249:339:4;840:81:0;943:10;964:1;936:18;;;:6;:18;;;;;:25;:29;932:204;;981:14;998:27;1014:10;998:15;:27::i;:::-;1039:5;;:34;;-1:-1:-1;;;1039:34:0;;1054:10;1039:34;;;2136:51:4;2203:18;;;2196:34;;;981:44:0;;-1:-1:-1;;;;;;1039:5:0;;:14;;2109:18:4;;1039:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1092:33:0;;704:25:4;;;1106:10:0;;1092:33;;692:2:4;677:18;1092:33:0;;;;;;;967:169;932:204;1153:10;1146:18;;;;:6;:18;;;;;:35;;1175:6;;1146:18;:35;;1175:6;;1146:35;:::i;:::-;;;;-1:-1:-1;;1198:10:0;1191:18;;;;:6;:18;;;;;;;1222:15;1191:28;;;;:46;1253:26;;;;;1272:6;704:25:4;;692:2;677:18;;558:177;1253:26:0;;;;;;;;736:550;:::o;1690:365::-;-1:-1:-1;;;;;1796:14:0;;1752:7;1796:14;;;:6;:14;;;;;;;;1771:39;;;;;;;;;;;;;;;;;;;;;;;;;;1824:21;;1820:35;;-1:-1:-1;1854:1:0;;1690:365;-1:-1:-1;;1690:365:0:o;1820:35::-;1866:23;1910:9;:19;;;1892:15;:37;;;;:::i;:::-;1866:63;;1939:14;2009;1989:15;1976:10;;1957:9;:16;;;:29;;;;:::i;:::-;:47;;;;:::i;:::-;1956:68;;;;:::i;:::-;1939:85;1690:365;-1:-1:-1;;;;;1690:365:0:o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;886:51:4::0;859:18;;2672:31:1::1;740:203:4::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:3;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:3;1901:40:1;;;886:51:4;859:18;;1901:40:1;740:203:4;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;948:180::-;1007:6;1060:2;1048:9;1039:7;1035:23;1031:32;1028:52;;;1076:1;1073;1066:12;1028:52;-1:-1:-1;1099:23:4;;948:180;-1:-1:-1;948:180:4:o;1700:127::-;1761:10;1756:3;1752:20;1749:1;1742:31;1792:4;1789:1;1782:15;1816:4;1813:1;1806:15;1832:125;1897:9;;;1918:10;;;1915:36;;;1931:18;;:::i;:::-;1832:125;;;;:::o;2241:277::-;2308:6;2361:2;2349:9;2340:7;2336:23;2332:32;2329:52;;;2377:1;2374;2367:12;2329:52;2409:9;2403:16;2462:5;2455:13;2448:21;2441:5;2438:32;2428:60;;2484:1;2481;2474:12;3593:128;3660:9;;;3681:11;;;3678:37;;;3695:18;;:::i;3726:168::-;3799:9;;;3830;;3847:15;;;3841:22;;3827:37;3817:71;;3868:18;;:::i;3899:217::-;3939:1;3965;3955:132;;4009:10;4004:3;4000:20;3997:1;3990:31;4044:4;4041:1;4034:15;4072:4;4069:1;4062:15;3955:132;-1:-1:-1;4101:9:4;;3899:217::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    151,
    2308
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x7A766460 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x113 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 PUSH2 0x200 SWAP1 PUSH2 0x573 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x23B DUP5 DUP7 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x321 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x32B PUSH1 0x0 PUSH2 0x66E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43616E6E6F74207374616B65203020746F6B656E73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 PUSH2 0x44E CALLER PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x51B SWAP1 DUP5 SWAP1 PUSH2 0x71D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x568 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SUB PUSH2 0x5B8 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0xBBF81E00 DUP3 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x60B PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x63E DUP2 PUSH2 0x66E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x707 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x79F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP INVALID 0xB8 PUSH9 0x8DF78B869381A01882 PUSH22 0xD7BE864858EFEC1EF3964477555570F2BF1364736F6C PUSH4 0x4300081C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121"
    },
    "53": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA694FC3A"
    },
    "60": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "64": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD82E3962"
    },
    "71": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159"
    },
    "75": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "86": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "97": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2DEF6620"
    },
    "109": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "124": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7A766460"
    },
    "131": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "135": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B0A47EE"
    },
    "142": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "146": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        151,
        2308
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "156": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192"
    },
    "159": {
      "fn": "OriginStaking.unstake",
      "jump": "i",
      "offset": [
        1292,
        1684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "160": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "STOP",
      "path": "0"
    },
    "162": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "166": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x319"
    },
    "169": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "170": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "174": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "177": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "178": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "180": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BE"
    },
    "183": {
      "fn": "OriginStaking.getStake",
      "jump": "i",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "191": {
      "op": "SHL"
    },
    "192": {
      "op": "SUB"
    },
    "193": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "194": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2171,
        2185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "196": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "197": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "198": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "199": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "201": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "203": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "204": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "205": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "206": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "209": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "210": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "211": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2237,
        2251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "212": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "213": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "215": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP5",
      "path": "0"
    },
    "216": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "ADD",
      "path": "0"
    },
    "217": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "218": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "219": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "220": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "221": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "222": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "223": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP5",
      "path": "0"
    },
    "224": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "225": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "227": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "228": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "229": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "ADD",
      "path": "0"
    },
    "230": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "231": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "232": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "233": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "234": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "ADD",
      "path": "0"
    },
    "235": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "236": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "237": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "238": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2216,
        2251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "239": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "243": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "244": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "245": {
      "op": "SWAP3"
    },
    "246": {
      "op": "DUP4"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "DUP4"
    },
    "251": {
      "op": "ADD"
    },
    "252": {
      "op": "SWAP2"
    },
    "253": {
      "op": "SWAP1"
    },
    "254": {
      "op": "SWAP2"
    },
    "255": {
      "op": "MSTORE"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "260": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "261": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "262": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "263": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "SUB",
      "path": "0"
    },
    "264": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "265": {
      "fn": "OriginStaking.getStake",
      "offset": [
        2114,
        2306
      ],
      "op": "RETURN",
      "path": "0"
    },
    "266": {
      "offset": [
        341,
        371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "270": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "272": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "273": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "274": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "278": {
      "fn": "OriginStaking.getStake",
      "offset": [
        341,
        371
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "279": {
      "op": "SWAP1"
    },
    "280": {
      "op": "DUP2"
    },
    "281": {
      "op": "MSTORE"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "284": {
      "op": "ADD"
    },
    "285": {
      "offset": [
        341,
        371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "288": {
      "op": "JUMP"
    },
    "289": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "290": {
      "fn": "Ownable.owner",
      "offset": [
        1684,
        1691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "292": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 0
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "op": "SUB"
    },
    "301": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "AND",
      "path": "1"
    },
    "302": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "303": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "305": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "op": "SWAP1"
    },
    "315": {
      "op": "SWAP2"
    },
    "316": {
      "op": "AND"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "325": {
      "op": "JUMP"
    },
    "326": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "330": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "333": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "334": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "336": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "339": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        736,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "340": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "344": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        736,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "345": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "346": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "349": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "352": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "353": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "355": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BE"
    },
    "358": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "363": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A"
    },
    "371": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "372": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BE"
    },
    "377": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "1"
    },
    "378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x603"
    },
    "382": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "1"
    },
    "383": {
      "offset": [
        191,
        210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "offset": [
        191,
        210
      ],
      "op": "AND",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        191,
        210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "402": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1292,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "403": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1345,
        1355
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "404": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1366,
        1367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "406": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "407": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "409": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "411": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "413": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "414": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "417": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "418": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1338,
        1363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "419": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "422": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "423": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "425": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "434": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "439": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "440": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "ADD",
      "path": "0"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "446": {
      "op": "DUP3"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH16",
      "value": "0x139BC81D1BDAD95B9CC81CDD185AD959"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "471": {
      "op": "DUP3"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "478": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "480": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "481": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "482": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "483": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "SUB",
      "path": "0"
    },
    "484": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "486": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1330,
        1388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1423,
        1433
      ],
      "op": "CALLER",
      "path": "0"
    },
    "488": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1399,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "490": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "491": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "492": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "493": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "495": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "497": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "500": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "501": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1434
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "502": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1441
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "503": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1416,
        1441
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1468,
        1495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200"
    },
    "507": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1468,
        1495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "508": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1468,
        1483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "511": {
      "fn": "OriginStaking.unstake",
      "jump": "i",
      "offset": [
        1468,
        1495
      ],
      "op": "JUMP",
      "path": "0"
    },
    "512": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1468,
        1495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "513": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1520,
        1530
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "514": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "516": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "517": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "518": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "519": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "521": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "523": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "524": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "526": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "527": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1513,
        1531
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "528": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "529": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "530": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "531": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "533": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "534": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "ADD",
      "path": "0"
    },
    "536": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "537": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "538": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "539": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1506,
        1531
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "540": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1547
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 3
    },
    "541": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1451,
        1495
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "542": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1451,
        1495
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "554": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1547
      ],
      "op": "AND",
      "path": "0"
    },
    "555": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1556
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "561": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "562": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1569,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "565": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1451,
        1495
      ],
      "op": "DUP5",
      "path": "0"
    },
    "566": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1569,
        1575
      ],
      "op": "DUP7",
      "path": "0"
    },
    "567": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1569,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71D"
    },
    "570": {
      "fn": "OriginStaking.unstake",
      "jump": "i",
      "offset": [
        1569,
        1584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "571": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1569,
        1584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "574": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "586": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP6",
      "path": "0"
    },
    "587": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "588": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SHL",
      "path": "0"
    },
    "589": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "AND",
      "path": "0"
    },
    "590": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "op": "SUB"
    },
    "600": {
      "op": "SWAP1"
    },
    "601": {
      "op": "SWAP3"
    },
    "602": {
      "op": "AND"
    },
    "603": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "605": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "606": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ADD",
      "path": "0"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "615": {
      "op": "ADD"
    },
    "616": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "618": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "620": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "621": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "622": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "623": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SUB",
      "path": "0"
    },
    "624": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "625": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "627": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP8",
      "path": "0"
    },
    "628": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "GAS",
      "path": "0"
    },
    "629": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "CALL",
      "path": "0"
    },
    "630": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "631": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "633": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "636": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "637": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "638": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "640": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "642": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "643": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "645": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "REVERT",
      "path": "0"
    },
    "646": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "647": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "POP",
      "path": "0"
    },
    "648": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "POP",
      "path": "0"
    },
    "649": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "POP",
      "path": "0"
    },
    "650": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "POP",
      "path": "0"
    },
    "651": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "653": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "654": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "655": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "657": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "NOT",
      "path": "0"
    },
    "658": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "660": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "661": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ADD",
      "path": "0"
    },
    "662": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "AND",
      "path": "0"
    },
    "663": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "664": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ADD",
      "path": "0"
    },
    "665": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "666": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "668": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "669": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "POP",
      "path": "0"
    },
    "670": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "671": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "ADD",
      "path": "0"
    },
    "672": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "673": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AA"
    },
    "676": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "677": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "678": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x736"
    },
    "681": {
      "fn": "OriginStaking.unstake",
      "jump": "i",
      "offset": [
        1542,
        1585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "682": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1542,
        1585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x40"
    },
    "686": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "687": {
      "op": "DUP3"
    },
    "688": {
      "op": "DUP2"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1610,
        1620
      ],
      "op": "CALLER",
      "path": "0"
    },
    "691": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1610,
        1620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
    },
    "725": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "731": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "732": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "DUP1",
      "path": "0"
    },
    "733": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "734": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "SUB",
      "path": "0"
    },
    "735": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1601,
        1629
      ],
      "op": "LOG2",
      "path": "0"
    },
    "737": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "739": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "740": {
      "op": "DUP2"
    },
    "741": {
      "op": "DUP2"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1658,
        1668
      ],
      "op": "CALLER",
      "path": "0"
    },
    "744": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1658,
        1668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
    },
    "778": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "784": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "785": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "DUP1",
      "path": "0"
    },
    "786": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "787": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "SUB",
      "path": "0"
    },
    "788": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "789": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1644,
        1677
      ],
      "op": "LOG2",
      "path": "0"
    },
    "790": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1320,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "791": {
      "fn": "OriginStaking.unstake",
      "offset": [
        1320,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "792": {
      "fn": "OriginStaking.unstake",
      "jump": "o",
      "offset": [
        1292,
        1684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "794": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x321"
    },
    "797": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x641"
    },
    "800": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2387
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x32B"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2384,
        2385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "810": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2357,
        2387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "813": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "OriginStaking.stake",
      "offset": [
        803,
        804
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "816": {
      "fn": "OriginStaking.stake",
      "offset": [
        794,
        800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "817": {
      "branch": 21,
      "fn": "OriginStaking.stake",
      "offset": [
        794,
        804
      ],
      "op": "GT",
      "path": "0"
    },
    "818": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375"
    },
    "821": {
      "branch": 21,
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "822": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "824": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "836": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "838": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "839": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "ADD",
      "path": "0"
    },
    "840": {
      "op": "MSTORE"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "845": {
      "op": "DUP3"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "PUSH21",
      "value": "0x43616E6E6F74207374616B65203020746F6B656E73"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "875": {
      "op": "DUP3"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "884": {
      "op": "JUMP"
    },
    "885": {
      "fn": "OriginStaking.stake",
      "offset": [
        786,
        830
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "886": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "888": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "889": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "891": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "892": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "902": {
      "fn": "OriginStaking.stake",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0"
    },
    "903": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "905": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "906": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ADD",
      "path": "0"
    },
    "907": {
      "op": "MSTORE"
    },
    "908": {
      "fn": "OriginStaking.stake",
      "offset": [
        887,
        891
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "916": {
      "op": "DUP2"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "DUP4"
    },
    "919": {
      "op": "SWAP1"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "930": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "931": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "AND",
      "path": "0"
    },
    "932": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        866
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "938": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        866
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "944": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "946": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "947": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "948": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP4",
      "path": "0"
    },
    "949": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "SUB",
      "path": "0"
    },
    "950": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "951": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "953": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP8",
      "path": "0"
    },
    "954": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "GAS",
      "path": "0"
    },
    "955": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "CALL",
      "path": "0"
    },
    "956": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "957": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "958": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "959": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "962": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "964": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "966": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "967": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "968": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "969": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "971": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "REVERT",
      "path": "0"
    },
    "972": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "POP",
      "path": "0"
    },
    "974": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "POP",
      "path": "0"
    },
    "975": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "POP",
      "path": "0"
    },
    "976": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "POP",
      "path": "0"
    },
    "977": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "979": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "980": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "981": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "983": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "NOT",
      "path": "0"
    },
    "984": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "986": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "987": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ADD",
      "path": "0"
    },
    "988": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "AND",
      "path": "0"
    },
    "989": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "990": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "992": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "994": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "995": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "POP",
      "path": "0"
    },
    "996": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "997": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "ADD",
      "path": "0"
    },
    "998": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1002": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1003": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1004": {
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x736"
    },
    "1007": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        848,
        901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1008": {
      "branch": 22,
      "fn": "OriginStaking.stake",
      "offset": [
        848,
        901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E"
    },
    "1012": {
      "branch": 22,
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1013": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1015": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1022": {
      "op": "SHL"
    },
    "1023": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1024": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1029": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1030": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1036": {
      "op": "DUP3"
    },
    "1037": {
      "op": "ADD"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH15",
      "value": "0x151C985B9CD9995C8819985A5B1959"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "1069": {
      "op": "JUMP"
    },
    "1070": {
      "fn": "OriginStaking.stake",
      "offset": [
        840,
        921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "OriginStaking.stake",
      "offset": [
        943,
        953
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1072": {
      "fn": "OriginStaking.stake",
      "offset": [
        964,
        965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1074": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1075": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1076": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1077": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1079": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1081": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1082": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1084": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        954
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1086": {
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        961
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1087": {
      "branch": 23,
      "fn": "OriginStaking.stake",
      "offset": [
        936,
        965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1088": {
      "fn": "OriginStaking.stake",
      "offset": [
        932,
        1136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FC"
    },
    "1091": {
      "branch": 23,
      "fn": "OriginStaking.stake",
      "offset": [
        932,
        1136
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1092": {
      "fn": "OriginStaking.stake",
      "offset": [
        981,
        995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1094": {
      "fn": "OriginStaking.stake",
      "offset": [
        998,
        1025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44E"
    },
    "1097": {
      "fn": "OriginStaking.stake",
      "offset": [
        1014,
        1024
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1098": {
      "fn": "OriginStaking.stake",
      "offset": [
        998,
        1013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "1101": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        998,
        1025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1102": {
      "fn": "OriginStaking.stake",
      "offset": [
        998,
        1025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1103": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1044
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1105": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1044
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1106": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1108": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1109": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1119": {
      "fn": "OriginStaking.stake",
      "offset": [
        1054,
        1064
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1120": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1122": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1123": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "DUP4"
    },
    "1130": {
      "op": "SWAP1"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "fn": "OriginStaking.stake",
      "offset": [
        981,
        1025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1133": {
      "fn": "OriginStaking.stake",
      "offset": [
        981,
        1025
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1044
      ],
      "op": "AND",
      "path": "0"
    },
    "1144": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1145": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1053
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1150": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1156": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1158": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1159": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1160": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1161": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "SUB",
      "path": "0"
    },
    "1162": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1163": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1165": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1166": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "GAS",
      "path": "0"
    },
    "1167": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "CALL",
      "path": "0"
    },
    "1168": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1169": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1170": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1171": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A0"
    },
    "1174": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1175": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1176": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1178": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1179": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1180": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1181": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1183": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1184": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "POP",
      "path": "0"
    },
    "1186": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "POP",
      "path": "0"
    },
    "1187": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "POP",
      "path": "0"
    },
    "1188": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "POP",
      "path": "0"
    },
    "1189": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1191": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1192": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1193": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1195": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "NOT",
      "path": "0"
    },
    "1196": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1198": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1199": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1200": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "AND",
      "path": "0"
    },
    "1201": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1202": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1203": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1204": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1206": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1207": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "POP",
      "path": "0"
    },
    "1208": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1209": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1210": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1211": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C4"
    },
    "1214": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1215": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1216": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x736"
    },
    "1219": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        1039,
        1073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1220": {
      "fn": "OriginStaking.stake",
      "offset": [
        1039,
        1073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "1224": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "DUP2"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "fn": "OriginStaking.stake",
      "offset": [
        1106,
        1116
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1229": {
      "fn": "OriginStaking.stake",
      "offset": [
        1106,
        1116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1230": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
    },
    "1263": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1269": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1270": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1271": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1272": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "SUB",
      "path": "0"
    },
    "1273": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "OriginStaking.stake",
      "offset": [
        1092,
        1125
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1275": {
      "fn": "OriginStaking.stake",
      "offset": [
        967,
        1136
      ],
      "op": "POP",
      "path": "0"
    },
    "1276": {
      "fn": "OriginStaking.stake",
      "offset": [
        932,
        1136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1277": {
      "fn": "OriginStaking.stake",
      "offset": [
        1153,
        1163
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "1278": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1280": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1281": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1282": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1283": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1285": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1287": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1288": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1290": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1291": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1292": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1294": {
      "fn": "OriginStaking.stake",
      "offset": [
        1175,
        1181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1295": {
      "fn": "OriginStaking.stake",
      "offset": [
        1175,
        1181
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1296": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1297": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1300": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "OriginStaking.stake",
      "offset": [
        1175,
        1181
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1302": {
      "fn": "OriginStaking.stake",
      "offset": [
        1175,
        1181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71D"
    },
    "1306": {
      "fn": "OriginStaking.stake",
      "jump": "i",
      "offset": [
        1146,
        1181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1310": {
      "fn": "OriginStaking.stake",
      "offset": [
        1146,
        1181
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "fn": "OriginStaking.stake",
      "offset": [
        1198,
        1208
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "1314": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1316": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1318": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1319": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1321": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1323": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1324": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1326": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1328": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1209
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1330": {
      "fn": "OriginStaking.stake",
      "offset": [
        1222,
        1237
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1331": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1333": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1219
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1335": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1219
      ],
      "op": "ADD",
      "path": "0"
    },
    "1336": {
      "fn": "OriginStaking.stake",
      "offset": [
        1191,
        1237
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1337": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 13
    },
    "1338": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "1371": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1372": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x568"
    },
    "1375": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1376": {
      "fn": "OriginStaking.stake",
      "offset": [
        1272,
        1278
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1377": {
      "op": "DUP2"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "SWAP1"
    },
    "1383": {
      "op": "JUMP"
    },
    "1384": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1385": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1387": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1388": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1389": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1390": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "SUB",
      "path": "0"
    },
    "1391": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1392": {
      "fn": "OriginStaking.stake",
      "offset": [
        1253,
        1279
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1393": {
      "fn": "OriginStaking.stake",
      "offset": [
        736,
        1286
      ],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "OriginStaking.stake",
      "jump": "o",
      "offset": [
        736,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1395": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "AND",
      "path": "0"
    },
    "1406": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1752,
        1759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1408": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1410": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1411": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1413": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1415": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1418": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1420": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1422": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1796,
        1810
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1423": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1424": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1425": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1426": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1427": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "ADD",
      "path": "0"
    },
    "1428": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1429": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1430": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1431": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1432": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1433": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1434": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1435": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1436": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1438": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1439": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1440": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "ADD",
      "path": "0"
    },
    "1441": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1442": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1443": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1444": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "ADD",
      "path": "0"
    },
    "1445": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1446": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1447": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1448": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1449": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1771,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1450": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1824,
        1845
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1451": {
      "branch": 24,
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1824,
        1845
      ],
      "op": "SUB",
      "path": "0"
    },
    "1452": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1820,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "1455": {
      "branch": 24,
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1820,
        1855
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1854,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1459": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1854,
        1855
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1460": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "fn": "OriginStaking.calculateReward",
      "jump": "o",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1464": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1820,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1465": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1866,
        1889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1467": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1910,
        1919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1468": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1910,
        1929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1470": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1910,
        1929
      ],
      "op": "ADD",
      "path": "0"
    },
    "1471": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1910,
        1929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1472": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1907
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1473": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1476": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1478": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x758"
    },
    "1481": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1892,
        1929
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1892,
        1929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1483": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1866,
        1929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1484": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1866,
        1929
      ],
      "op": "POP",
      "path": "0"
    },
    "1485": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1939,
        1953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1487": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        2009,
        2023
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBBF81E00"
    },
    "1492": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1989,
        2004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1493": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1976,
        1986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1495": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1976,
        1986
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1496": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1966
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1497": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1499": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1500": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1973
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1501": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E6"
    },
    "1504": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1986
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1505": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1509": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1957,
        1986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1510": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        1986
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1511": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        2004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F0"
    },
    "1514": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        2004
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1515": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        2004
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        2004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1519": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1957,
        2004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1520": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1957,
        2004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1521": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1956,
        2024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "1524": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1956,
        2024
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1956,
        2024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1956,
        2024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x782"
    },
    "1529": {
      "fn": "OriginStaking.calculateReward",
      "jump": "i",
      "offset": [
        1956,
        2024
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1530": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1956,
        2024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1531": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1939,
        2024
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1532": {
      "fn": "OriginStaking.calculateReward",
      "offset": [
        1690,
        2055
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "op": "POP"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "fn": "OriginStaking.calculateReward",
      "jump": "o",
      "offset": [
        1690,
        2055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1540": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60B"
    },
    "1543": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x641"
    },
    "1546": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "SUB"
    },
    "1556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2627,
        2649
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 15
    },
    "1557": {
      "branch": 25,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2627,
        2649
      ],
      "op": "AND",
      "path": "1"
    },
    "1558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x635"
    },
    "1561": {
      "branch": 25,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1565": {
      "op": "PUSH4",
      "value": "0x1E4FBDF7"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2700,
        2701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "ADD",
      "path": "1"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DD"
    },
    "1588": {
      "op": "JUMP"
    },
    "1589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2751
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x63E"
    },
    "1593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2742,
        2750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2723,
        2751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "POP",
      "path": "1"
    },
    "1600": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1601": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1796,
        1958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1602": {
      "fn": "Ownable.owner",
      "offset": [
        1684,
        1691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1604": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "AND",
      "path": "1"
    },
    "1614": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 17
    },
    "1615": {
      "branch": 26,
      "fn": "Ownable._checkOwner",
      "offset": [
        1855,
        1878
      ],
      "op": "EQ",
      "path": "1",
      "statement": 18
    },
    "1616": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1851,
        1952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32B"
    },
    "1619": {
      "branch": 26,
      "fn": "Ownable._checkOwner",
      "offset": [
        1851,
        1952
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1620": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1622": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1623": {
      "op": "PUSH4",
      "value": "0x118CDAA7"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1632": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1633": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1634": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1636": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1637": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "ADD",
      "path": "1"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DD"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2912,
        3099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1647": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2985,
        3001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "op": "SUB"
    },
    "1659": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 19
    },
    "1660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "AND",
      "path": "1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "op": "NOT"
    },
    "1671": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1672": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "AND",
      "path": "1"
    },
    "1673": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "OR",
      "path": "1"
    },
    "1675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1677": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x40"
    },
    "1679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1681": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1682": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1683": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "AND",
      "path": "1"
    },
    "1684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1685": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1686": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2985,
        3001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1723": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2975,
        3099
      ],
      "op": "POP",
      "path": "1"
    },
    "1724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2912,
        3099
      ],
      "op": "POP",
      "path": "1"
    },
    "1725": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2912,
        3099
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1726": {
      "op": "JUMPDEST"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1731": {
      "op": "DUP3"
    },
    "1732": {
      "op": "DUP5"
    },
    "1733": {
      "op": "SUB"
    },
    "1734": {
      "op": "SLT"
    },
    "1735": {
      "op": "ISZERO"
    },
    "1736": {
      "op": "PUSH2",
      "value": "0x6D0"
    },
    "1739": {
      "op": "JUMPI"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1742": {
      "op": "DUP1"
    },
    "1743": {
      "op": "REVERT"
    },
    "1744": {
      "op": "JUMPDEST"
    },
    "1745": {
      "op": "DUP2"
    },
    "1746": {
      "op": "CALLDATALOAD"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "op": "DUP2"
    },
    "1756": {
      "op": "AND"
    },
    "1757": {
      "op": "DUP2"
    },
    "1758": {
      "op": "EQ"
    },
    "1759": {
      "op": "PUSH2",
      "value": "0x6E7"
    },
    "1762": {
      "op": "JUMPI"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1765": {
      "op": "DUP1"
    },
    "1766": {
      "op": "REVERT"
    },
    "1767": {
      "op": "JUMPDEST"
    },
    "1768": {
      "op": "SWAP4"
    },
    "1769": {
      "op": "SWAP3"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "jump": "o",
      "op": "JUMP"
    },
    "1774": {
      "op": "JUMPDEST"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "DUP5"
    },
    "1781": {
      "op": "SUB"
    },
    "1782": {
      "op": "SLT"
    },
    "1783": {
      "op": "ISZERO"
    },
    "1784": {
      "op": "PUSH2",
      "value": "0x700"
    },
    "1787": {
      "op": "JUMPI"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1790": {
      "op": "DUP1"
    },
    "1791": {
      "op": "REVERT"
    },
    "1792": {
      "op": "JUMPDEST"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "CALLDATALOAD"
    },
    "1795": {
      "op": "SWAP2"
    },
    "1796": {
      "op": "SWAP1"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "jump": "o",
      "op": "JUMP"
    },
    "1799": {
      "op": "JUMPDEST"
    },
    "1800": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1810": {
      "op": "MSTORE"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "REVERT"
    },
    "1821": {
      "op": "JUMPDEST"
    },
    "1822": {
      "op": "DUP1"
    },
    "1823": {
      "op": "DUP3"
    },
    "1824": {
      "op": "ADD"
    },
    "1825": {
      "op": "DUP1"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "GT"
    },
    "1828": {
      "op": "ISZERO"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1832": {
      "op": "JUMPI"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1836": {
      "op": "PUSH2",
      "value": "0x707"
    },
    "1839": {
      "jump": "i",
      "op": "JUMP"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "SWAP3"
    },
    "1842": {
      "op": "SWAP2"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "jump": "o",
      "op": "JUMP"
    },
    "1846": {
      "op": "JUMPDEST"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "DUP5"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "op": "SLT"
    },
    "1855": {
      "op": "ISZERO"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1859": {
      "op": "JUMPI"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "REVERT"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "MLOAD"
    },
    "1867": {
      "op": "DUP1"
    },
    "1868": {
      "op": "ISZERO"
    },
    "1869": {
      "op": "ISZERO"
    },
    "1870": {
      "op": "DUP2"
    },
    "1871": {
      "op": "EQ"
    },
    "1872": {
      "op": "PUSH2",
      "value": "0x6E7"
    },
    "1875": {
      "op": "JUMPI"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1878": {
      "op": "DUP1"
    },
    "1879": {
      "op": "REVERT"
    },
    "1880": {
      "op": "JUMPDEST"
    },
    "1881": {
      "op": "DUP2"
    },
    "1882": {
      "op": "DUP2"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "DUP2"
    },
    "1885": {
      "op": "DUP2"
    },
    "1886": {
      "op": "GT"
    },
    "1887": {
      "op": "ISZERO"
    },
    "1888": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1891": {
      "op": "JUMPI"
    },
    "1892": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1895": {
      "op": "PUSH2",
      "value": "0x707"
    },
    "1898": {
      "jump": "i",
      "op": "JUMP"
    },
    "1899": {
      "op": "JUMPDEST"
    },
    "1900": {
      "op": "DUP1"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "MUL"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "ISZERO"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "DUP3"
    },
    "1907": {
      "op": "DIV"
    },
    "1908": {
      "op": "DUP5"
    },
    "1909": {
      "op": "EQ"
    },
    "1910": {
      "op": "OR"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1914": {
      "op": "JUMPI"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1918": {
      "op": "PUSH2",
      "value": "0x707"
    },
    "1921": {
      "jump": "i",
      "op": "JUMP"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "PUSH2",
      "value": "0x79F"
    },
    "1929": {
      "op": "JUMPI"
    },
    "1930": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1945": {
      "op": "MSTORE"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "REVERT"
    },
    "1951": {
      "op": "JUMPDEST"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "DIV"
    },
    "1954": {
      "op": "SWAP1"
    },
    "1955": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "df0a6e5c7a425b992837420827cf4b1d0852c1c7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./openzeppelin/token/ERC20/IERC20.sol\";\nimport \"./openzeppelin/access/Ownable.sol\";\n\ncontract OriginStaking is Ownable {\n    IERC20 public token;\n\n    struct Stake {\n        uint256 amount;\n        uint256 startTime;\n    }\n\n    mapping(address => Stake) private stakes;\n\n    uint256 public rewardRate = 10; // 10% annual reward\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 reward);\n\n    // \u2705 Proper constructor with token and owner initialization\n    constructor(address _token) Ownable(msg.sender) {\n        token = IERC20(_token);\n    }\n\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Cannot stake 0 tokens\");\n        require(token.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n\n        if (stakes[msg.sender].amount > 0) {\n            uint256 reward = calculateReward(msg.sender);\n            token.transfer(msg.sender, reward);\n            emit RewardClaimed(msg.sender, reward);\n        }\n\n        stakes[msg.sender].amount += amount;\n        stakes[msg.sender].startTime = block.timestamp;\n\n        emit Staked(msg.sender, amount);\n    }\n\n    function unstake() external {\n        require(stakes[msg.sender].amount > 0, \"No tokens staked\");\n\n        uint256 amount = stakes[msg.sender].amount;\n        uint256 reward = calculateReward(msg.sender);\n\n        delete stakes[msg.sender];\n\n        token.transfer(msg.sender, amount + reward);\n\n        emit Unstaked(msg.sender, amount);\n        emit RewardClaimed(msg.sender, reward);\n    }\n\n    function calculateReward(address staker) public view returns (uint256) {\n        Stake memory userStake = stakes[staker];\n        if (userStake.amount == 0) return 0;\n\n        uint256 stakingDuration = block.timestamp - userStake.startTime;\n        uint256 reward = (userStake.amount * rewardRate * stakingDuration) / (365 days * 100);\n\n        return reward;\n    }\n\n    // \u2705 Getter function for external stake access\n    function getStake(address staker) external view returns (uint256 amount, uint256 startTime) {\n        Stake memory stake = stakes[staker];\n        return (stake.amount, stake.startTime);\n    }\n}\n\n",
  "sourceMap": "151:2157:0:-:0;;;369:2;341:30;;643:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;679:10;;1269:95:1;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;455:51:4;428:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;701:5:0::1;:22:::0;;-1:-1:-1;;;;;;701:22:0::1;-1:-1:-1::0;;;;;701:22:0;;;::::1;::::0;;;::::1;::::0;;151:2157;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;309:203::-;151:2157:0;;;;;;",
  "sourcePath": "contracts/OriginStaking.sol",
  "type": "contract"
}